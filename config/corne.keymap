/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DVORAK 0
#define NUMBERS 1
#define SYMBOLS 2
#define FUNCTION 3
#define MISC 4
#define BLUETOOTH 5

&lt {
        retro-tap;
};

/ {
//-------------------------------------------------------------
// 3x5 key indices
// |  1 |  2 |  3 |  4 |  5 |        |  6 |  7 |  8 |  9 | 10 | 
// | 13 | 14 | 15 | 16 | 17 |        | 18 | 19 | 20 | 21 | 22 |
// | 25 | 26 | 27 | 28 | 29 |        | 30 | 31 | 32 | 33 | 34 | 
//              | 36 | 37 | 38 |   | 39 | 40 | 41 |
//------------------------------------------------------------- 
        combos {
                compatible = "zmk,combos";
                combo_esc {
                timeout-ms = <50>;
                key-positions = <1 2>;
                bindings = <&kp ESC>;
                };
                combo_ins {
                timeout-ms = <50>;
                key-positions = <27 28>;
                bindings = <&kp INS>;                
                };
                combo_del {
                timeout-ms = <50>;
                key-positions = <31 32>;
                bindings = <&kp DEL>;                
                };
                combo_shift_left {
                timeout-ms = <50>;
                key-positions = <15 16>;
                bindings = <&kp LSHFT>;
                };
                combo_shift_right {
                timeout-ms = <50>;
                key-positions = <19 20>;
                bindings = <&kp LSHFT>;
                };
                combo_ctrl_left {
                timeout-ms = <50>;
                key-positions = <14 15>;
                bindings = <&kp LCTRL>;
                };
                combo_ctrl_right {
                timeout-ms = <50>;
                key-positions = <20 21>;
                bindings = <&kp LCTRL>;
                };
                combo_alt_left {
                timeout-ms = <50>;
                key-positions = <13 14>;
                bindings = <&kp LALT>;
                };
                combo_alt_right {
                timeout-ms = <50>;
                key-positions = <21 22>;
                bindings = <&kp LALT>;
                };
                combo_gui_left {
                timeout-ms = <50>;
                key-positions = <25 26>;
                bindings = <&kp LGUI>;
                };
                combo_gui_right {
                timeout-ms = <50>;
                key-positions = <33 34>;
                bindings = <&kp LGUI>;
                };
                
        };

        keymap {
                compatible = "zmk,keymap";

                dvorak_layer {
                        bindings = <
   &none &kp SQT &kp COMMA &kp DOT &kp P &kp Y                   &kp F &kp G  &kp C &kp R &kp L &none
   &none &kp A  &kp O &kp E &kp U &kp I                    &kp D &kp H &kp T &kp N &kp S &none
   &none &kp SEMI &kp Q &kp J &kp K &kp X                   &kp B &kp M &kp W &kp V &kp Z &none
                  &none &lt NUMBERS SPACE &lt MISC TAB    &lt BLUETOOTH RET &lt SYMBOLS BSPC &none
                        >;
                };

                numbers_layer {
                        bindings = <
   &none &kp N1   &kp N2   &kp N3    &kp N4    &kp N5     &kp N6   &kp N7    &kp N8    &kp N9    &kp N0 &none
   &none &trans &trans &trans &trans &kp CAPS   &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &none  &none
   &none &none    &trans &none     &none     &none      &kp HOME &kp PG_DN &kp PG_UP &kp END   &none  &none
                         &none     &trans       &kp TAB         &kp RET &lt FUNCTION BSPC &none
                        >;
                };

                symbols_layer {
                        bindings = <
   &none &kp EXCL  &kp AT    &kp LT   &kp GT   &none     &none     &kp LBKT &kp RBKT  &kp UNDER &kp SLASH  &none
   &none &kp BSLH  &kp POUND &kp LPAR &kp RPAR &kp PIPE  &kp PRCNT &kp LBRC &kp RBRC  &kp EQUAL &kp MINUS  &none
   &none &kp QMARK &kp GRAVE &kp STAR &kp PLUS &none     &none     &kp AMPS &kp CARET &kp TILDE &kp DOLLAR &none
                        &none &lt FUNCTION SPACE &none  &none &trans &none
                        >;
                };

                function_layer {
                        bindings = <
   &none &kp F1   &kp F2   &kp F3    &kp F4    &kp F5  &kp F6  &kp F7    &kp F8    &kp F9   &kp F10  &none
   &none &trans &trans &trans &trans &kp F11 &kp F12 &trans &trans &trans &trans &none
   &none &none    &kp RALT &none     &none     &none   &none   &none     &none     &kp RALT &none    &none
                        &none &trans &none &none &trans &none
                        >;
                };

                misc_layer {
                        bindings = <
   &none &none &none &none &none &kp C_MUTE &none &none &none &none &none &none
   &none &none &kp LC(X) &kp LC(C) &kp LC(V) &kp C_VOL_UP &none &none &none &none &none &none 
   &none &kp PSCRN &none &none &none &kp C_VOL_DN &none &none &none &none &none &none 
   &none &none &trans &none &none &none 
  
                        >;
                };

                bluetooth_layer {
                        bindings = <
   &none &none &none &none &none &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none 
   &none &none &none &none &none &none &none &bt BT_NXT  &bt BT_PRV &none &none &none
   &none &none &none &none &none &none &none &none &none &none &bt BT_CLR &none 
                        &none &none &none &trans &none &none
                        >;
                };
        };
};
